version: '3.8'

services:
  seckill_1:
    build:
      context: ../
      dockerfile: dockers/Dockerfile
    container_name: seckill_1
    expose:
      - "8080"
    depends_on:
      - redis
      - mysql
      - kafka
    environment:
      # 这里写你的服务需要的环境变量，比如连接redis/mysql/kafka的地址
      REDIS_ADDR: redis:6379
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      KAFKA_ADDR: kafka:9092

  seckill_2:
    build:
      context: ../
      dockerfile: dockers/Dockerfile
    container_name: seckill_2
    expose:
      - "8080"
    depends_on:
      - redis
      - mysql
      - kafka
    environment:
      REDIS_ADDR: redis:6379
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      KAFKA_ADDR: kafka:9092

  seckill_3:
    build:
      context: ../
      dockerfile: dockers/Dockerfile
    container_name: seckill_3
    expose:
      - "8080"
    depends_on:
      - redis
      - mysql
      - kafka
    environment:
      REDIS_ADDR: redis:6379
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      KAFKA_ADDR: kafka:9092

  kafka:
    image: bitnami/kafka:latest
    ports:
      - 9092:9092
    environment:
      - KAFKA_MODE=kraft
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_NODE_ID=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  mysql:
    image: mysql:9.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456  # 请改成安全密码
      MYSQL_DATABASE: redisseckill-go
      MYSQL_PASSWORD: 123456
    volumes:
      - E:/docker/mysql2:/var/lib/mysql

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - "E:/go代码/RedisSeckill-go/dockers/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
    ports:
      - "80:80"
    depends_on:
      - seckill_1
      - seckill_2
      - seckill_3

volumes:
  redis-data:
